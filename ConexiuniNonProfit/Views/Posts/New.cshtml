@model ConexiuniNonProfit.Models.Post
@{
    ViewBag.Title = "Adăugare postare";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <style>
        body {
            background-color: #f9f9f9;
            font-family: 'Arial', sans-serif;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .post-form {
            background: #fff;
            border-radius: 10px;
            padding: 20px;
            width: 100%;
            max-width: 800px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

            .post-form h2 {
                text-align: center;
                margin-bottom: 20px;
                color: #333;
            }

            .post-form .form-group {
                margin-bottom: 15px;
            }

            .post-form label {
                font-size: 16px;
                color: #555;
                font-weight: bold;
                display: block;
                margin-bottom: 5px;
            }

            .post-form .form-control {
                border: 2px solid #ff8c00;
                border-radius: 10px;
                padding: 10px;
                width: 100%;
            }

                .post-form .form-control:focus {
                    border-color: #ff6b00;
                    outline: none;
                }

        .custom-select-wrapper {
            position: relative;
            width: 100%;
        }

        .custom-select {
            display: none;
        }

        .custom-select-trigger {
            position: relative;
            display: block;
            width: 100%;
            padding: 10px;
            font-size: 16px;
            color: #555;
            border: 2px solid #ff8c00;
            border-radius: 10px;
            cursor: pointer;
            background: #fff;
        }

            .custom-select-trigger::after {
                content: '\25BC';
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-50%);
            }

        .custom-options {
            position: absolute;
            display: none;
            top: 100%;
            left: 0;
            right: 0;
            background: #fff;
            border: 2px solid #ff8c00;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        .custom-option {
            padding: 10px;
            font-size: 16px;
            color: #555;
            cursor: pointer;
        }

            .custom-option:hover {
                background: #ff8c00;
                color: #fff;
            }

        .custom-select-wrapper.open .custom-options {
            display: block;
        }

        .post-form .btn-pink {
            background-color: pink;
            border-color: hotpink;
            color: black;
            border-radius: 10px;
            padding: 10px 20px;
            font-size: 18px;
            width: 100%;
            max-width: 300px;
            margin: 0 auto;
            display: block;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .post-form .btn-pink:hover {
                background-color: hotpink;
                color: white;
            }

        .text-danger {
            color: red;
        }

        /* Stilizare pentru imaginea de previzualizare */
        #ImagePreview {
            margin-top: 10px;
            text-align: center;
        }

        #Preview {
            max-width: 100%;
            max-height: 200px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="post-form">
            @using (Html.BeginForm("New", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                <h2>Adăugare postare</h2>

                <div class="form-group">
                    @Html.LabelFor(m => m.PostContent, "Conținutul postării:")
                    @Html.TextAreaFor(m => m.PostContent, new { @class = "form-control", rows = 5 })
                    @Html.ValidationMessageFor(m => m.PostContent, null, new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ActiuniId, "Selectează o acțiune:")
                    <div class="custom-select-wrapper">
                        <div class="custom-select-trigger">Selectează o acțiune</div>
                        <div class="custom-options">
                            @foreach (var action in ViewBag.Actiuni as SelectList)
                            {
                                <div class="custom-option" data-value="@action.Value">@action.Text</div>
                            }
                        </div>
                        @Html.DropDownListFor(m => m.ActiuniId, (SelectList)ViewBag.Actiuni, new { @class = "custom-select" })
                    </div>
                    @Html.ValidationMessageFor(m => m.ActiuniId, null, new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.CategoryId, "Selectează o categorie:")
                    <div class="custom-select-wrapper">
                        <div class="custom-select-trigger">Selectează o categorie</div>
                        <div class="custom-options">
                            @foreach (var category in ViewBag.Categories as SelectList)
                            {
                                <div class="custom-option" data-value="@category.Value">@category.Text</div>
                            }
                        </div>
                        @Html.DropDownListFor(m => m.CategoryId, (SelectList)ViewBag.Categories, new { @class = "custom-select" })
                    </div>
                    @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label for="Image" class="control-label">Selectează o fotografie:</label>
                    <input type="file" name="Image" class="form-control" id="ImageInput" onchange="previewImage(this)" />
                    <span class="text-danger"></span>
                </div>

                <div id="ImagePreview" style="display: none;">
                    <img id="Preview" src="#" alt="Previzualizare" />
                </div>

                <button type="submit" class="btn btn-pink">Adaugă postare</button>
            }
        </div>
    </div>

    <script>
        function previewImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    document.getElementById('Preview').setAttribute('src', e.target.result);
                    document.getElementById('ImagePreview').style.display = 'block';
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.custom-select-wrapper').forEach(function (wrapper) {
                const select = wrapper.querySelector('.custom-select');
                const trigger = wrapper.querySelector('.custom-select-trigger');
                const options = wrapper.querySelectorAll('.custom-option');

                trigger.addEventListener('click', function () {
                    wrapper.classList.toggle('open');
                });

                options.forEach(function (option) {
                    option.addEventListener('click', function () {
                        select.value = option.getAttribute('data-value');
                        trigger.textContent = option.textContent;
                        wrapper.classList.remove('open');
                    });
                });

                document.addEventListener('click', function (e) {
                    if (!wrapper.contains(e.target)) {
                        wrapper.classList.remove('open');
                    }
                });
            });
        });
    </script>
</body>
</html>
